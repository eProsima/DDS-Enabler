# Test description:
#   Run ddsenabler example action_server and a Fibonacci client sending goals.
#   Domain 34 is used by all containers.

services:
  ddsenabler:
    image: ${DDSENABLER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsenabler
    networks:
      - std_net
    volumes:
      - ./config.yml:/config/config.yml
      - ../persistence:/persistence
    command: ./build/ddsenabler/examples/service/ddsenabler_example_service --announce-server true --persistence-path /persistence --config /config/config.yml --expected-requests 3

  add_two_ints_client_1:
    image: ${DDSENABLER_COMPOSE_TEST_ROS2_DOCKER_IMAGE}
    container_name: add_two_ints_client_1
    depends_on:
      - ddsenabler
    networks:
      - std_net
    environment:
      - ROS_DOMAIN_ID=34
    command: ros2 run demo_nodes_cpp add_two_ints_client

  add_two_ints_client_2:
    image: ${DDSENABLER_COMPOSE_TEST_ROS2_DOCKER_IMAGE}
    container_name: add_two_ints_client_2
    depends_on:
      - ddsenabler
    networks:
      - std_net
    environment:
      - ROS_DOMAIN_ID=34
    command: >
      sh -c "sleep 3 &&
           ros2 run demo_nodes_cpp add_two_ints_client"
  add_two_ints_client_3:
    image: ${DDSENABLER_COMPOSE_TEST_ROS2_DOCKER_IMAGE}
    container_name: add_two_ints_client_3
    depends_on:
      - ddsenabler
    networks:
      - std_net
    environment:
      - ROS_DOMAIN_ID=34
    command: >
      sh -c "sleep 6 &&
           ros2 run demo_nodes_cpp add_two_ints_client"
networks:
  std_net:
  default:
    driver: none