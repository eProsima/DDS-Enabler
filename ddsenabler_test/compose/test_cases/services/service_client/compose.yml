# Test description:
#   Run ddsenabler example service client against an AddTwoInts server.
#   3 requests are sent to the server.
#   Domain 33 is used.

services:
  # ENABLER
  ddsenabler:
    image: ${DDSENABLER_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsenabler
    networks:
      - std_net
    volumes:
      - ./config.yml:/config/config.yml
      - ../persistence:/persistence
    command: ./build/ddsenabler/examples/service/ddsenabler_example_service -client --persistence-path /persistence --config /config/config.yml --request-initial-wait 2
  add_two_ints_server:
    image: ${DDSENABLER_COMPOSE_TEST_ROS2_DOCKER_IMAGE}
    container_name: add_two_ints_server
    depends_on:
      - ddsenabler
    networks:
      - std_net
    environment:
      - ROS_DOMAIN_ID=33
    volumes:
      - ./../run_service_server_timeout.sh:/run_service_server_timeout.sh:ro
    entrypoint: ["/bin/bash", "/run_service_server_timeout.sh"]

networks:
  std_net:
  default:
    driver: none